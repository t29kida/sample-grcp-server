// Code generated by MockGen. DO NOT EDIT.
// Source: auth.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAuther is a mock of Auther interface.
type MockAuther struct {
	ctrl     *gomock.Controller
	recorder *MockAutherMockRecorder
}

// MockAutherMockRecorder is the mock recorder for MockAuther.
type MockAutherMockRecorder struct {
	mock *MockAuther
}

// NewMockAuther creates a new mock instance.
func NewMockAuther(ctrl *gomock.Controller) *MockAuther {
	mock := &MockAuther{ctrl: ctrl}
	mock.recorder = &MockAutherMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuther) EXPECT() *MockAutherMockRecorder {
	return m.recorder
}

// CreateAccessToken mocks base method.
func (m *MockAuther) CreateAccessToken() (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateAccessToken")
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateAccessToken indicates an expected call of CreateAccessToken.
func (mr *MockAutherMockRecorder) CreateAccessToken() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateAccessToken", reflect.TypeOf((*MockAuther)(nil).CreateAccessToken))
}
